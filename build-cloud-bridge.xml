<?xml version="1.0" encoding="UTF-8"?>

<project name="CloudBridge" default="help" basedir=".">
	<target name="help">
		<echo level="info" message="Ant Build File for CloudBridge" />
		<echo level="info" message="Type 'ant -projecthelp' to get a list of targets and their descriptions." />
	</target>
	<target name="usage" depends="help" />

	<dirname property="base.dir" file="${ant.file.CloudBridge}" />
	<property environment="env" />
	
	<property name="axis2.home" value="${env.AXIS2_HOME}" />
	<path id="axis2.class.path">
		<fileset dir="${axis2.home}">
			<include name="lib/*.jar" />
		</fileset>
	</path>
	<taskdef name="wsdl2code"
		classname="org.apache.axis2.tool.ant.AntCodegenTask"
		classpathref="axis2.class.path"
	/>

	<!-- directories for build and distribution -->
  	<property name="dist.dir" location="${base.dir}/dist" />
  	<property name="build.dir" location="${base.dir}/" />
  	<property name="buildnumber.dir" location="${build.dir}/" />
  	<property name="target.dir" location="${base.dir}/target" />
  	<property name="classes.dir" location="${target.dir}/classes" />
  	<property name="jar.dir" location="${target.dir}/jar" />
  	<property name="build.log" location="${target.dir}/ant_verbose.txt" />
	<property name="thirdparty.dir" location="${base.dir}/lib" />
	<property name="rampart.dir" location="${base.dir}/rampart-lib" />
	
	<property file="${build.dir}/build-cloud-bridge.properties" />
	<property name="version" value="${company.major.version}.${company.minor.version}.${company.patch.version}" />
		
  	<property name="tomcat.home" location="${env.CATALINA_HOME}" />
  	<property name="deploy.dir" location="${tomcat.home}" />
  	<echo level="info" message="deploy home: ${deploy.dir}" />
	
	<path id="thirdparty.classpath">
	    <fileset dir="${thirdparty.dir}">
	      	<include name="*.jar" />
	    </fileset>
	</path>

	<path id="rampart.classpath">
	    <fileset dir="${rampart.dir}">
	      	<include name="*.jar" />
	    </fileset>
	</path>

	<path id="dist.classpath">
    	<fileset dir="${target.dir}">
      		<include name="**/*.jar" />
    	</fileset>
  	</path>
	
	<target name="-init">
		<mkdir dir="${dist.dir}" />
		<mkdir dir="${target.dir}" />
		<record name="${build.log}" loglevel="verbose" action="start" />
	
		<!-- create a UTC build timestamp using ISO 8601 formatting -->
		<tstamp>
	  		<format property="utc.build.timestamp" pattern="yyyy-MM-dd'T'HH:mm:ss.SSS'Z'" timezone="GMT" />
		</tstamp>
	
		<!-- remember who/where did the build -->
		<exec executable="hostname" outputproperty="host.name" />
		<property name="builder.at" value="${user.name} at ${host.name}" />
		<property name="builder.id" value="${builder.at}, on ${utc.build.timestamp}" />
		<property name="built.by" value="${builder.at}, ${utc.build.timestamp}" />
		<echo level="info" message="builder: ${builder.id}" />
	
		<!-- set build.number property, stored in eponymous file -->
		<buildnumber file="${buildnumber.dir}/build.number" />
		<condition property="impl.version" value="${version}.${build.number}" else="${version}">
	  		<and>
	   			<isset property="update.build.number"/>
	  		</and>
		</condition>
	
		<echo message="Build number is ${impl.version}"/>
	
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${jar.dir}" />
		<mkdir dir="${dep.cache.dir}" />
		<record name="${build.log}" action="stop" />
	</target>
	
	<target name="clean" description="clean up files generated by the build">
    	<delete file="${build.log}" />
    	<delete dir="${classes.dir}" />
    	<delete dir="${jar.dir}" />
    	<delete dir="${dist.dir}" />
		<delete dir="${target.dir}" />
  	</target>
	
	<path id="cloud-bridge.classpath">
    	<path refid="thirdparty.classpath" />
    	<path refid="rampart.classpath" />
    	<path refid="dist.classpath" />
  	</path>
  	<target name="compile-cloud-bridge" depends="-init" description="Compile Cloud.com Simple Storage Service">
    	<compile-java jar.name="cloud-bridge.jar" top.dir="${base.dir}" classpath="cloud-bridge.classpath">
			<include-files>
		        <fileset dir="${base.dir}/src">
		          	<include name="**/*.hbm.xml"/>
		        </fileset>
			</include-files>
		</compile-java>
  	</target>

  	<target name="build-cloud-bridge-jar" depends="-init, compile-cloud-bridge" description="Builds cloud-bridge jar file.">
  		<jar jarfile="${dist.dir}/cloud-bridge.jar" basedir="${target.dir}/classes/cloud-bridge.jar" excludes="**/client/*">
  			<fileset dir="${base.dir}/src">
  				<include name="**/*.hbm.xml" />
  			</fileset>
  		</jar>
  	</target>

  	<target name="build-cloud-auth-s3-jar" depends="-init, compile-cloud-bridge" description="Builds cloud-auth s3 module.">
  		<mkdir dir="${dist.dir}/modules" />
  		<mkdir dir="${dist.dir}/modules/conf" />
  		  		  		
  		<jar jarfile="${dist.dir}/modules/cloud-auth-s3.jar" basedir="${target.dir}/classes/cloud-bridge.jar" excludes="**/*">
  			<fileset dir="${target.dir}/classes/cloud-bridge.jar">
  				<include name="**/auth/s3/*.class" />
  			</fileset>
  		</jar>
  		
		<copy todir="${dist.dir}/modules/conf">
      		<fileset dir="${base.dir}/conf">
        		<include name="log4j-cloud.xml"/>
      		</fileset>
    	</copy>
  	</target>

  	<target name="build-cloud-auth-ec2-jar" depends="-init, compile-cloud-bridge" description="Builds cloud-auth ec2 module.">
  		<mkdir dir="${dist.dir}/modules" />
  		<mkdir dir="${dist.dir}/modules/conf" />
  		  		  		
  		<jar jarfile="${dist.dir}/modules/cloud-auth-ec2.jar" basedir="${target.dir}/classes/cloud-bridge.jar" excludes="**/*">
  			<fileset dir="${target.dir}/classes/cloud-bridge.jar">
  				<include name="**/auth/ec2/*.class" />
  			</fileset>
  		</jar>
  		
		<copy todir="${dist.dir}/modules/conf">
      		<fileset dir="${base.dir}/conf">
        		<include name="log4j-cloud.xml"/>
      		</fileset>
    	</copy>
  	</target>

  	<target name="build-cloud-tool" depends="-init, compile-cloud-bridge" description="Builds cloud-bridge command line tool.">
  		<mkdir dir="${dist.dir}/cloud-tool" />
  		<mkdir dir="${dist.dir}/cloud-tool/lib" />
  		<mkdir dir="${dist.dir}/cloud-tool/conf" />
  		
  		<jar jarfile="${dist.dir}/cloud-tool/cloud-tool.jar" basedir="${target.dir}/classes/cloud-bridge.jar" excludes="**/*">
  			<fileset dir="${target.dir}/classes/cloud-bridge.jar">
  				<include name="**/tool/*.class" />
  				<include name="**/client/*.class" />
  			</fileset>
  		</jar>
  		
    	<copy todir="${dist.dir}/cloud-tool/lib">
      		<fileset dir="${base.dir}/lib">
        		<include name="*.jar"/>
      		</fileset>
    	</copy>
    	<copy todir="${dist.dir}/cloud-tool">
      		<fileset dir="${base.dir}/scripts">
        		<include name="run.sh"/>
        		<include name="run.bat"/>
      		</fileset>
    	</copy>
    	<copy todir="${dist.dir}/cloud-tool/conf">
      		<fileset dir="${base.dir}/conf">
        		<include name="log4j-cloud.xml"/>
      		</fileset>
    	</copy>
  	</target>
	
  	<target name="build-cloud-bridge-s3" depends="-init, compile-cloud-bridge" description="Builds cloud-bridge S3 AAR file.">
  		<jar jarfile="${dist.dir}/cloud-s3.aar" basedir="${target.dir}/classes/cloud-bridge.jar" excludes="**/*">
     	    <metainf dir="${base.dir}/resource/AmazonS3">
     	    	<include name="services.xml" />
     	    	<include name="AmazonS3.wsdl" />
     	    </metainf>
  		</jar>
	</target>
	
	<target name="build-cloud-auth-s3" depends="-init, compile-cloud-bridge" description="Builds cloud-bridge S3 auth MAR file.">
  		<jar jarfile="${dist.dir}/cloud-auth-s3.mar" basedir="${target.dir}/classes/cloud-bridge.jar" excludes="**/*">
  		  	<fileset dir="${target.dir}/classes/cloud-bridge.jar">
  				<include name="**/auth/s3/*.class" />
  			</fileset>
     	    <metainf dir="${base.dir}/src/com/cloud/bridge/auth/s3">
     	    	<include name="module.xml" />
     	    </metainf>
  		</jar>
	</target>

  	<target name="build-cloud-bridge-ec2" depends="-init, compile-cloud-bridge" description="Builds cloud-bridge EC2 AAR file.">
  		<jar jarfile="${dist.dir}/cloud-ec2.aar" basedir="${target.dir}/classes/cloud-bridge.jar" excludes="**/*">
     	    <metainf dir="${base.dir}/resource/AmazonEC2">
     	    	<include name="services.xml" />
     	    	<include name="AmazonEC2.wsdl" />
     	    </metainf>
  		</jar>
	</target>

  	<target name="build-cloud-auth-ec2" depends="-init, compile-cloud-bridge" description="Builds cloud-bridge EC2 auth MAR file.">
  		<jar jarfile="${dist.dir}/cloud-auth-ec2.mar" basedir="${target.dir}/classes/cloud-bridge.jar" excludes="**/*">
  		  	<fileset dir="${target.dir}/classes/cloud-bridge.jar">
  				<include name="**/auth/ec2/*.class" />
  			</fileset>
     	    <metainf dir="${base.dir}/src/com/cloud/bridge/auth/ec2">
     	    	<include name="module.xml" />
     	    </metainf>
  		</jar>
	</target>
	
  	<target name="deploy-axis" depends="-init">
    	<unwar overwrite="true" src="${base.dir}/lib/axis2.war" dest="${deploy.dir}/webapps/bridge"/>
	</target>

	<target name="build-cloud-bridge" depends="build-cloud-bridge-jar,build-cloud-auth-s3-jar,build-cloud-auth-ec2-jar,build-cloud-bridge-s3,build-cloud-bridge-ec2,build-cloud-auth-s3,build-cloud-auth-ec2,build-cloud-tool">
	</target>
	
  	<target name="deploy-cloud-bridge" depends="build-cloud-bridge-jar, build-cloud-bridge">
    	<copy todir="${deploy.dir}/webapps/bridge/WEB-INF/services">
      		<fileset dir="${dist.dir}">
        		<include name="cloud-s3.aar"/>
      		</fileset>
    	</copy>

    	<copy todir="${deploy.dir}/webapps/bridge/WEB-INF/services">
      		<fileset dir="${dist.dir}">
        		<include name="cloud-ec2.aar"/>
      		</fileset>
    	</copy>

    	<copy todir="${deploy.dir}/webapps/bridge/WEB-INF/modules">
      		<fileset dir="${dist.dir}">
        		<include name="cloud-auth-s3.mar"/>
      		</fileset>
    	</copy>

    	<copy todir="${deploy.dir}/webapps/bridge/WEB-INF/modules">
      		<fileset dir="${dist.dir}">
        		<include name="cloud-auth-ec2.mar"/>
      		</fileset>
    	</copy>

    	<copy todir="${deploy.dir}/webapps/bridge/WEB-INF/lib">
      		<fileset dir="${jar.dir}">
        		<include name="cloud-bridge.jar"/>
      		</fileset>
    	</copy>
  		
    	<copy todir="${deploy.dir}/lib">
      		<fileset dir="${base.dir}/lib">
        		<include name="*.jar"/>
      		</fileset>
    	</copy>
    	    	
	    <copy overwrite="true" todir="${deploy.dir}/conf">
	      	<fileset dir="${base.dir}/conf/">
	        	<include name="**/*"/>
	      	</fileset>
	    </copy>
	    
	    <copy overwrite="true" todir="${deploy.dir}/webapps/bridge/WEB-INF/conf">
	      	<fileset dir="${base.dir}/resource/Axis2/">
	        	<include name="axis2.xml"/>
	      	</fileset>
	    </copy>
  		
	    <copy overwrite="true" todir="${deploy.dir}/webapps/bridge/WEB-INF">
	      	<fileset dir="${base.dir}/web/">
	        	<include name="web.xml"/>
	      	</fileset>
	    </copy>
	    
	    <!-- rampart lib goes where the axis lib files go -->
    	<copy todir="${deploy.dir}/webapps/bridge/WEB-INF/lib">
      		<fileset dir="${base.dir}/rampart-lib">
        		<include name="*.jar"/>
      		</fileset>
    	</copy>
    	
      	<!-- copying over rampart mar files for WS-Security -->
    	<copy todir="${deploy.dir}/webapps/bridge/WEB-INF/modules">
      		<fileset dir="${base.dir}/modules">
        		<include name="*.mar"/>
      		</fileset>
    	</copy>   	

      	<!-- WS-Security requires this keystore -->
    	<copy todir="${deploy.dir}/webapps/bridge/WEB-INF/classes">
      		<fileset dir="${base.dir}/resource/AmazonEC2">
        		<include name="crypto.properties"/>
        		<include name="xes.keystore"/>
      		</fileset>
    	</copy>
  		
  		<delete file="${deploy.dir}/webapps/bridge/WEB-INF/lib/dom4j-1.6.1.jar" />
  	</target>
  	
	<target name="deploydb"> 
	<echo message="deploydb" />
		<exec dir="${db.dir}" executable="bash">
	    		<arg value="deploy-db-bridge.sh" />
	    	</exec>
	</target>
  	
	
	<target name="codegen-server-s3">
		<wsdl2code
			wsdlfilename="${base.dir}/wsdl/cloud-AmazonS3.wsdl"
			serverside="true"
			generateservicexml="true"
			skipbuildxml="true"
			serversideinterface="true"
			namespacetopackages="http://s3.amazonaws.com/doc/2006-03-01/=com.amazon.s3"
			targetsourcefolderlocation="src"
			targetresourcesfolderlocation="resource/AmazonS3"
			overwrite="true"
		/>
	</target>
	
	<target name="codegen-server-ec2">
		<wsdl2code
			wsdlfilename="${base.dir}/wsdl/cloud-AmazonEC2.wsdl"
			serverside="true"
			generateservicexml="true"
			skipbuildxml="true"
			serversideinterface="true"
			namespacetopackages="http://ec2.amazonaws.com/doc/2009-11-30/=com.amazon.ec2"
			targetsourcefolderlocation="src"
			targetresourcesfolderlocation="resource/AmazonEC2"
			overwrite="true"
		/>
	</target>
	
	<target name="codegen-client-s3">
		<wsdl2code
			wsdlfilename="${base.dir}/wsdl/cloud-AmazonS3.wsdl"
			serverside="false"
			generateservicexml="false"
			skipbuildxml="true"
			serversideinterface="false"
			namespacetopackages="http://s3.amazonaws.com/doc/2006-03-01/=com.amazon.s3.client"
			targetsourcefolderlocation="src"
			targetresourcesfolderlocation="resource/AmazonS3"
			overwrite="true"
		/>
	</target>
	
	<target name="codegen-client-ec2">
		<wsdl2code
			wsdlfilename="${base.dir}/wsdl/cloud-AmazonEC2.wsdl"
			serverside="false"
			generateservicexml="false"
			skipbuildxml="true"
			serversideinterface="false"
			namespacetopackages="http://ec2.amazonaws.com/doc/2009-11-30/=com.amazon.ec2.client"
			targetsourcefolderlocation="src"
			targetresourcesfolderlocation="resource/AmazonEC2"
			overwrite="true"
		/>
	</target>
</project>

